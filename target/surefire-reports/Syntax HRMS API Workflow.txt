-------------------------------------------------------------------------------
Test set: Syntax HRMS API Workflow
-------------------------------------------------------------------------------
Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 47.984 s <<< FAILURE! - in Syntax HRMS API Workflow
Syntax HRMS API Workflow.Creating Dynamic Employee  Time elapsed: 26.927 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step "JWT is generated" is undefined. You can implement it using the snippet(s) below:

@Given("JWT is generated")
public void jwt_is_generated() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Given("a request is prepared to create an employee with dynamic data {string},{string},{string},{string},{string},{string},{string}")
public void a_request_is_prepared_to_create_an_employee_with_dynamic_data(String string, String string2, String string3, String string4, String string5, String string6, String string7) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Syntax HRMS API Workflow.Creating an employee  Time elapsed: 5.397 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step "JWT is generated" is undefined. You can implement it using the snippet(s) below:

@Given("JWT is generated")
public void jwt_is_generated() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Given("a request is prepared to create and employee")
public void a_request_is_prepared_to_create_and_employee() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("a Post call is made to create an employee")
public void a_post_call_is_made_to_create_an_employee() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the status code for creating an employee is {int}")
public void the_status_code_for_creating_an_employee_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the employee created contains key {string} and value {string}")
public void the_employee_created_contains_key_and_value(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the emplyeeID {string} is stored as a global variable to be used for other calls")
public void the_emplyee_id_is_stored_as_a_global_variable_to_be_used_for_other_calls(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Syntax HRMS API Workflow.Retrieving created employee  Time elapsed: 15.66 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step "JWT is generated" is undefined. You can implement it using the snippet(s) below:

@Given("JWT is generated")
public void jwt_is_generated() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Some other steps were also undefined:

@Given("a request is prepared to retrieve the created employee")
public void a_request_is_prepared_to_retrieve_the_created_employee() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("a GET call is made to retrieve the created employee")
public void a_get_call_is_made_to_retrieve_the_created_employee() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the status code for retrieving the created employee is {int}")
public void the_status_code_for_retrieving_the_created_employee_is(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the retrieved employee ID {string} matches the globally stored employee ID")
public void the_retrieved_employee_id_matches_the_globally_stored_employee_id(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the retrieved data at {string} matches the data used to create and an employee with employee ID {string}")
public void the_retrieved_data_at_matches_the_data_used_to_create_and_an_employee_with_employee_id(String string, String string2, io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}


